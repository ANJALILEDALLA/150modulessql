DROP TABLE IF EXISTS module.customers;
DROP TABLE IF EXISTS module.products;
DROP TABLE IF EXISTS module.orders;

CREATE TABLE module.customers(
  customer_id INT,
  customer_name VARCHAR(15)
);

CREATE TABLE module.products(
  product_id INT,
  product_name VARCHAR(10),
  unit_price INT
);

CREATE TABLE module.orders(
  order_id INT,
  customer_id INT,
  product_id INT,
  quantity INT,
  order_date DATE
);

INSERT INTO module.customers VALUES
(1,'John Doe'),
(2,'Jane Smith'),
(3,'Alice Johnson'),
(4,'Somnath');

INSERT INTO module.products VALUES
(101,'Product A',150),
(102,'Product B',200),
(103,'Product C',250);

INSERT INTO module.orders VALUES
(1,1,101,1,'2024-01-01'),
(2,1,102,1,'2024-01-02'),
(3,2,101,3,'2024-01-03'),
(4,2,102,2,'2024-01-04'),
(5,3,103,1,'2024-01-05'),
(6,3,101,1,'2024-01-06'),
(7,3,102,1,'2024-01-07'),
(8,1,102,1,'2024-01-08'),
(9,2,103,2,'2024-01-09'),
(10,4,102,1,'2024-01-07'),
(11,4,101,3,'2024-01-08'),
(12,4,103,2,'2024-01-09');

/*100)In the domain of retail analytics, understanding customer behavior is crucial for driving business growth and enhancing customer
 satisfaction. One essential aspect is identifying customers who have purchased all available products,
 as they exhibit strong engagement with the product offerings and represent potential loyal customers. 
 Write an SQL to identify customers who have bought all the products available in products table along with total revenue 
generated by them. Sort the output by total revenue in decreasing order.*/


SELECT c.customer_id,c.customer_name,SUM(o.quantity*p.unit_price) AS total_revenue
FROM module.orders o
JOIN module.products p ON p.product_id=o.product_id
JOIN module.customers c on c.customer_id=o.customer_id
GROUP BY c.customer_id,c.customer_name
HAVING COUNT(DISTINCT o.product_id) = (SELECT COUNT(*) FROM module.products)
ORDER BY total_revenue desc;
